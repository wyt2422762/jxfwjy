<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.fg.mapper.FgMapper">

  <resultMap type="Fg" id="FgResult">
    <result property="id" column="id"/>
    <result property="fwzl" column="fwzl"/>
    <result property="qzh" column="qzh"/>
    <result property="zrfs" column="zrfs"/>
    <result property="zrfsQt" column="zrfs_qt"/>
    <result property="htbh" column="htbh"/>
    <result property="slbh" column="slbh"/>
    <result property="sqrq" column="sqrq"/>
    <result property="slrq" column="slrq"/>
    <result property="bz" column="bz"/>
    <result property="fj" column="fj"/>
    <result property="zrfName" column="zrf_name"/>
    <result property="zrfDh" column="zrf_dh"/>
    <result property="zrfZjLx" column="zrf_zj_lx"/>
    <result property="zrfZj" column="zrf_zj"/>
    <result property="zrfDlName" column="zrf_dl_name"/>
    <result property="zrfDlDh" column="zrf_dl_dh"/>
    <result property="zrfDlZjLx" column="zrf_dl_zj_lx"/>
    <result property="zrfDlZj" column="zrf_dl_zj"/>
    <result property="zrfGy" column="zrf_gy"/>
    <result property="zrfGyFe" column="zrf_gy_fe"/>
    <result property="srfName" column="srf_name"/>
    <result property="srfDh" column="srf_dh"/>
    <result property="srfZjLx" column="srf_zj_lx"/>
    <result property="srfZj" column="srf_zj"/>
    <result property="srfDlName" column="srf_dl_name"/>
    <result property="srfDlDh" column="srf_dl_dh"/>
    <result property="srfDlZjLx" column="srf_dl_zj_lx"/>
    <result property="srfDlZj" column="srf_dl_zj"/>
    <result property="srfGy" column="srf_gy"/>
    <result property="srfGyFe" column="srf_gy_fe"/>

    <result property="createBy"      column="create_by"       />
    <result property="createTime"    column="create_time"     />
    <result property="updateBy"      column="update_by"       />
    <result property="updateTime"    column="update_time"     />

  </resultMap>

  <resultMap id="FgFgFwResult" type="Fg" extends="FgResult">
    <collection property="fgFwList" notNullColumn="sub_id" javaType="java.util.List" resultMap="FgFwResult"/>
  </resultMap>

  <resultMap type="FgFw" id="FgFwResult">
    <result property="id" column="sub_id"/>
    <result property="fkFgid" column="sub_fk_fgid"/>
    <result property="zcs" column="sub_zcs"/>
    <result property="cc" column="sub_cc"/>
    <result property="mj" column="sub_mj"/>
    <result property="xz" column="sub_xz"/>
    <result property="yt" column="sub_yt"/>
    <result property="nd" column="sub_nd"/>
    <result property="jg" column="sub_jg"/>
    <result property="bz" column="sub_bz"/>
  </resultMap>

  <sql id="selectFgVo">
    select id,
           fwzl,
           qzh,
           zrfs,
           zrfs_qt,
           htbh,
           slbh,
           sqrq,
           slrq,
           bz,
           fj,
           zrf_name,
           zrf_dh,
           zrf_zj_lx,
           zrf_zj,
           zrf_dl_name,
           zrf_dl_dh,
           zrf_dl_zj_lx,
           zrf_dl_zj,
           zrf_gy,
           zrf_gy_fe,
           srf_name,
           srf_dh,
           srf_zj_lx,
           srf_zj,
           srf_dl_name,
           srf_dl_dh,
           srf_dl_zj_lx,
           srf_dl_zj,
           srf_gy,
           srf_gy_fe,

           create_by,
           create_time,
           update_by,
           update_time
    from fg
  </sql>

  <select id="selectFgList" parameterType="Fg" resultMap="FgResult">
    <include refid="selectFgVo"/>
    <where>
      <if test="fwzl != null  and fwzl != ''">and fwzl like concat('%', #{fwzl}, '%')</if>
      <if test="qzh != null  and qzh != ''">and qzh = #{qzh}</if>
      <if test="htbh != null  and htbh != ''">and htbh = #{htbh}</if>
      <if test="slbh != null  and slbh != ''">and slbh = #{slbh}</if>
    </where>
  </select>

  <select id="selectFgById" parameterType="String" resultMap="FgFgFwResult">
    select a.id,
           a.fwzl,
           a.qzh,
           a.zrfs,
           a.zrfs_qt,
           a.htbh,
           a.slbh,
           a.sqrq,
           a.slrq,
           a.bz,
           a.fj,
           a.zrf_name,
           a.zrf_dh,
           a.zrf_zj_lx,
           a.zrf_zj,
           a.zrf_dl_name,
           a.zrf_dl_dh,
           a.zrf_dl_zj_lx,
           a.zrf_dl_zj,
           a.zrf_gy,
           a.zrf_gy_fe,
           a.srf_name,
           a.srf_dh,
           a.srf_zj_lx,
           a.srf_zj,
           a.srf_dl_name,
           a.srf_dl_dh,
           a.srf_dl_zj_lx,
           a.srf_dl_zj,
           a.srf_gy,
           a.srf_gy_fe,

           a.create_by,
           a.create_time,
           a.update_by,
           a.update_time,

           b.id      as sub_id,
           b.fk_fgid as sub_fk_fgid,
           b.zcs     as sub_zcs,
           b.cc      as sub_cc,
           b.mj      as sub_mj,
           b.xz      as sub_xz,
           b.yt      as sub_yt,
           b.nd      as sub_nd,
           b.jg      as sub_jg,
           b.bz      as sub_bz
    from fg a
           left join fg_fw b on b.fk_fgid = a.id
    where a.id = #{id}
  </select>

  <insert id="insertFg" parameterType="Fg">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select UUID();
    </selectKey>
    insert into fg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="fwzl != null">fwzl,</if>
      <if test="qzh != null">qzh,</if>
      <if test="zrfs != null">zrfs,</if>
      <if test="zrfsQt != null">zrfs_qt,</if>
      <if test="htbh != null">htbh,</if>
      <if test="slbh != null">slbh,</if>
      <if test="sqrq != null">sqrq,</if>
      <if test="slrq != null">slrq,</if>
      <if test="bz != null">bz,</if>
      <if test="fj != null">fj,</if>
      <if test="zrfName != null">zrf_name,</if>
      <if test="zrfDh != null">zrf_dh,</if>
      <if test="zrfZjLx != null">zrf_zj_lx,</if>
      <if test="zrfZj != null">zrf_zj,</if>
      <if test="zrfDlName != null">zrf_dl_name,</if>
      <if test="zrfDlDh != null">zrf_dl_dh,</if>
      <if test="zrfDlZjLx != null">zrf_dl_zj_lx,</if>
      <if test="zrfDlZj != null">zrf_dl_zj,</if>
      <if test="zrfGy != null">zrf_gy,</if>
      <if test="zrfGyFe != null">zrf_gy_fe,</if>
      <if test="srfName != null">srf_name,</if>
      <if test="srfDh != null">srf_dh,</if>
      <if test="srfZjLx != null">srf_zj_lx,</if>
      <if test="srfZj != null">srf_zj,</if>
      <if test="srfDlName != null">srf_dl_name,</if>
      <if test="srfDlDh != null">srf_dl_dh,</if>
      <if test="srfDlZjLx != null">srf_dl_zj_lx,</if>
      <if test="srfDlZj != null">srf_dl_zj,</if>
      <if test="srfGy != null">srf_gy,</if>
      <if test="srfGyFe != null">srf_gy_fe,</if>

      <if test="createBy != null and createBy != ''">create_by,</if>
      create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id},
      <if test="fwzl != null">#{fwzl},</if>
      <if test="qzh != null">#{qzh},</if>
      <if test="zrfs != null">#{zrfs},</if>
      <if test="zrfsQt != null">#{zrfsQt},</if>
      <if test="htbh != null">#{htbh},</if>
      <if test="slbh != null">#{slbh},</if>
      <if test="sqrq != null">#{sqrq},</if>
      <if test="slrq != null">#{slrq},</if>
      <if test="bz != null">#{bz},</if>
      <if test="fj != null">#{fj},</if>
      <if test="zrfName != null">#{zrfName},</if>
      <if test="zrfDh != null">#{zrfDh},</if>
      <if test="zrfZjLx != null">#{zrfZjLx},</if>
      <if test="zrfZj != null">#{zrfZj},</if>
      <if test="zrfDlName != null">#{zrfDlName},</if>
      <if test="zrfDlDh != null">#{zrfDlDh},</if>
      <if test="zrfDlZjLx != null">#{zrfDlZjLx},</if>
      <if test="zrfDlZj != null">#{zrfDlZj},</if>
      <if test="zrfGy != null">#{zrfGy},</if>
      <if test="zrfGyFe != null">#{zrfGyFe},</if>
      <if test="srfName != null">#{srfName},</if>
      <if test="srfDh != null">#{srfDh},</if>
      <if test="srfZjLx != null">#{srfZjLx},</if>
      <if test="srfZj != null">#{srfZj},</if>
      <if test="srfDlName != null">#{srfDlName},</if>
      <if test="srfDlDh != null">#{srfDlDh},</if>
      <if test="srfDlZjLx != null">#{srfDlZjLx},</if>
      <if test="srfDlZj != null">#{srfDlZj},</if>
      <if test="srfGy != null">#{srfGy},</if>
      <if test="srfGyFe != null">#{srfGyFe},</if>
      <if test="createBy != null and createBy != ''">#{createBy},</if>
      sysdate()
    </trim>
  </insert>

  <update id="updateFg" parameterType="Fg">
    update fg
    <trim prefix="SET" suffixOverrides=",">
      <if test="fwzl != null">fwzl = #{fwzl},</if>
      <if test="qzh != null">qzh = #{qzh},</if>
      <if test="zrfs != null">zrfs = #{zrfs},</if>
      <if test="zrfsQt != null">zrfs_qt = #{zrfsQt},</if>
      <if test="htbh != null">htbh = #{htbh},</if>
      <if test="slbh != null">slbh = #{slbh},</if>
      <if test="sqrq != null">sqrq = #{sqrq},</if>
      <if test="slrq != null">slrq = #{slrq},</if>
      <if test="bz != null">bz = #{bz},</if>
      <if test="fj != null">fj = #{fj},</if>
      <if test="zrfName != null">zrf_name = #{zrfName},</if>
      <if test="zrfDh != null">zrf_dh = #{zrfDh},</if>
      <if test="zrfZjLx != null">zrf_zj_lx = #{zrfZjLx},</if>
      <if test="zrfZj != null">zrf_zj = #{zrfZj},</if>
      <if test="zrfDlName != null">zrf_dl_name = #{zrfDlName},</if>
      <if test="zrfDlDh != null">zrf_dl_dh = #{zrfDlDh},</if>
      <if test="zrfDlZjLx != null">zrf_dl_zj_lx = #{zrfDlZjLx},</if>
      <if test="zrfDlZj != null">zrf_dl_zj = #{zrfDlZj},</if>
      <if test="zrfGy != null">zrf_gy = #{zrfGy},</if>
      <if test="zrfGyFe != null">zrf_gy_fe = #{zrfGyFe},</if>
      <if test="srfName != null">srf_name = #{srfName},</if>
      <if test="srfDh != null">srf_dh = #{srfDh},</if>
      <if test="srfZjLx != null">srf_zj_lx = #{srfZjLx},</if>
      <if test="srfZj != null">srf_zj = #{srfZj},</if>
      <if test="srfDlName != null">srf_dl_name = #{srfDlName},</if>
      <if test="srfDlDh != null">srf_dl_dh = #{srfDlDh},</if>
      <if test="srfDlZjLx != null">srf_dl_zj_lx = #{srfDlZjLx},</if>
      <if test="srfDlZj != null">srf_dl_zj = #{srfDlZj},</if>
      <if test="srfGy != null">srf_gy = #{srfGy},</if>
      <if test="srfGyFe != null">srf_gy_fe = #{srfGyFe},</if>

      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </trim>
    where id = #{id}
  </update>

  <delete id="deleteFgById" parameterType="String">
    delete from fg where id = #{id}
  </delete>

  <delete id="deleteFgByIds" parameterType="String">
    delete from fg where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <delete id="deleteFgFwByFkFgids" parameterType="String">
    delete from fg_fw where fk_fgid in
    <foreach item="fkFgid" collection="array" open="(" separator="," close=")">
      #{fkFgid}
    </foreach>
  </delete>

  <delete id="deleteFgFwByFkFgid" parameterType="String">
    delete
    from fg_fw
    where fk_fgid = #{fkFgid}
  </delete>

  <insert id="batchFgFw">
    insert into fg_fw(id, fk_fgid, zcs, cc, mj, xz, yt, nd, jg, bz) values
    <foreach item="item" index="index" collection="list" separator=",">
      ( UUID(), #{item.fkFgid}, #{item.zcs}, #{item.cc}, #{item.mj}, #{item.xz}, #{item.yt}, #{item.nd}, #{item.jg}, #{item.bz})
    </foreach>
  </insert>

</mapper>